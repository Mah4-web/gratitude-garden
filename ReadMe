
# 🌻 Gratitude Garden — Reflection & Learning

🪴 Overview

The Gratitude Garden is a full-stack web app where users can submit gratitude messages ("plant seeds"), interact with posts by giving them "sunshine" (likes), and watch their flowers visually grow from sprout to bloom based on community support.

## 🧠 What I Learned

Throughout the development of Gratitude Garden, I gained deep insights into full-stack web development using modern technologies and best practices. Here are the key topics and resources I explored and implemented:

### 💻 Backend (Node + Express + PostgreSQL)

* **Routing & HTTP methods**

  * `app.get()` & `app.post()` in Express
  * [Express Routing Docs](https://expressjs.com/en/guide/routing.html)
* **RESTful API Design**
* **Environment Variables** using [dotenv](https://www.npmjs.com/package/dotenv)
* **Cross-Origin Resource Sharing (CORS)** to allow frontend-backend communication

  * [MDN CORS Guide](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
* **PostgreSQL Queries** using SQL

  * [W3 Schools SQL Tutorial](https://www.w3schools.com/sql/)
  * [PostgreSQL Docs](https://www.postgresql.org/docs/)

### 🌐 Frontend (HTML + CSS + JS)

* **DOM Manipulation**

  * `appendChild()` → [MDN appendChild](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild)
  * Event Listeners → [MDN Event Listeners](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)

* **Fetch API & async/await**

  * [MDN Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
  * [MDN async Functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)

* **Responsive Design & Animations with CSS**

* **Conditional Rendering Based on Likes (flower growth logic)**

### ⚡ Build Tools

* **Vite** for modern frontend development

  * [Vite Getting Started](https://vitejs.dev/guide/)

### 🌐 Deployment

* **Render**

  * Deployed both backend (Express) and frontend (static web folder)
  * Used environment variables & web service configurations

---

## 🚧 Challenges I Faced

* Styling and layout issues with emoji placement, scaling, and responsiveness
* Integrating growth visuals based on "likes" (🌱 → 🍃 → 🌸 → 🌼)
* Getting dynamic likes to update both in UI and backend consistently
* Aligning data from backend to visually reflect in the frontend in real-time
* JavaScript functionality and code organization could be further improved for maintainability and performance.

---

## 🌟 Project Highlights

* Flower growth based on user likes
* "Give Sunshine" 🌞 feature
* Notification system for feedback
* Dynamic filtering and sections: All Posts, New Sprouts, Top Posts
* Fully deployed backend and frontend

---

## 🚀 Future Plans

I see great potential in turning Gratitude Garden into a meaningful application that supports mental wellness, collaboration, and positivity. I will add toggle button for day timings.

### 🔮 Planned Features & Use Cases

* **Workplace Culture Tool**
  Encourage employees to share peer appreciation and build a positive environment.

* **School or University Platform**
  Let students express gratitude and boost morale during exams or project weeks.

* **Event-Specific Deployments**
  Customize the platform for weddings, festivals, conferences, or hackathons.

* **Mental Health & Wellbeing**
  Daily affirmations, emotional journaling, and positivity sharing.

* **Monetization Opportunities**
  Sponsored “Sunshine Moments,” branded flowers, and feel-good ad spaces.

---

## 📚 References & Resources

* [Express Docs](https://expressjs.com/)
* [Node.js Docs](https://nodejs.org/en/docs)
* [PostgreSQL Tutorial](https://www.postgresqltutorial.com/)
* [W3Schools SQL](https://www.w3schools.com/sql/)
* [MDN JavaScript Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript)
* [Vite Documentation](https://vitejs.dev/)
* [Render Deployment](https://render.com/)
* [Teacher's Notes](https://github.com/Tech-Educators/software-dev-021/tree/main/demos/week4/week4-assignment)
* [Sample Guestbook](https://guestbook-3ap1.onrender.com)
* [Sam's Notes](https://github.com/IndieMasco/TechEdSoftwareDeveloper021/tree/main/week4/express-ws)
* [Emojis](https://stackoverflow.com/questions/75585031/replacing-emoji-with-html-and-css-in-dropdown)
* [Emoji Icons](https://www.w3schools.com/html/html_emojis.asp)
* [Emojis](https://emojipedia.org/)
* [HTML Option Tag](https://www.w3schools.com/tags/tag_option.asp)
* [Google Font - Playfiar](https://fonts.google.com/selection/embed)
* [Google Font- Sans serif](https://fonts.google.com/selection/embed)
* [Color Toggle](https://stackoverflow.com/questions/4358155/changing-background-based-on-time-of-day-using-javascript?utm_source=chatgpt.com)
* [Dark Mode Toggle](https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/)
* [JavaScript string method that removes whitespace from both the start and end](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim)
* [Docs](https://www.postgresql.org/docs/current/datatype-datetime.html?utm_source=chatgpt.com)
* [SQL](https://www.mssqltips.com/sqlservertip/6769/sql-server-drop-table-if-exists/)
* [Form Objects](https://docs.solspace.com/craft/freeform/v1/templates/objects/form/)
* Watched few youtube videos for designing and google research.